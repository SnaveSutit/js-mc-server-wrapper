export default {
	'death.attack.anvil': /^.+? was squashed by a falling anvil$/,
	'death.attack.anvil.player': /^.+? was squashed by a falling anvil whilst fighting .+?$/,
	'death.attack.arrow': /^.+? was shot by .+?$/,
	'death.attack.arrow.item': /^.+? was shot by .+? using .+?$/,
	'death.attack.badRespawnPoint.link': /^Intentional Game Design/,
	'death.attack.badRespawnPoint.message': /^.+? was killed by .+?$/,
	'death.attack.cactus': /^.+? was pricked to death$/,
	'death.attack.cactus.player': /^.+? walked into a cactus whilst trying to escape .+?$/,
	'death.attack.cramming': /^.+? was squished too much$/,
	'death.attack.cramming.player': /^.+? was squashed by .+?$/,
	'death.attack.dragonBreath': /^.+? was roasted in dragon's breath"/,
	'death.attack.dragonBreath.player': /^.+? was roasted in dragon's breath by .+?"/,
	'death.attack.drown': /^.+? drowned$/,
	'death.attack.drown.player': /^.+? drowned whilst trying to escape .+?$/,
	'death.attack.dryout': /^.+? died from dehydration$/,
	'death.attack.dryout.player': /^.+? died from dehydration whilst trying to escape .+?$/,
	'death.attack.even_more_magic': /^.+? was killed by even more magic$/,
	'death.attack.explosion': /^.+? blew up$/,
	'death.attack.explosion.player': /^.+? was blown up by .+?$/,
	'death.attack.explosion.player.item': /^.+? was blown up by .+? using .+?$/,
	'death.attack.fall': /^.+? hit the ground too hard$/,
	'death.attack.fall.player': /^.+? hit the ground too hard whilst trying to escape .+?$/,
	'death.attack.fallingBlock': /^.+? was squashed by a falling block$/,
	'death.attack.fallingBlock.player': /^.+? was squashed by a falling block whilst fighting .+?$/,
	'death.attack.fallingStalactite': /^.+? was skewered by a falling stalactite$/,
	'death.attack.fallingStalactite.player':
		/^.+? was skewered by a falling stalactite whilst fighting .+?$/,
	'death.attack.fireball': /^.+? was fireballed by .+?$/,
	'death.attack.fireball.item': /^.+? was fireballed by .+? using .+?$/,
	'death.attack.fireworks': /^.+? went off with a bang$/,
	'death.attack.fireworks.item':
		/^.+? went off with a bang due to a firework fired from .+? by .+?$/,
	'death.attack.fireworks.player': /^.+? went off with a bang whilst fighting .+?$/,
	'death.attack.flyIntoWall': /^.+? experienced kinetic energy$/,
	'death.attack.flyIntoWall.player':
		/^.+? experienced kinetic energy whilst trying to escape .+?$/,
	'death.attack.freeze': /^.+? froze to death$/,
	'death.attack.freeze.player': /^.+? was frozen to death by .+?$/,
	'death.attack.generic': /^.+? died$/,
	'death.attack.genericKill': /^.+? was killed$/,
	'death.attack.genericKill.player': /^.+? was killed whilst fighting .+?$/,
	'death.attack.generic.player': /^.+? died because of .+?$/,
	'death.attack.hotFloor': /^.+? discovered the floor was lava$/,
	'death.attack.hotFloor.player': /^.+? walked into the danger zone due to .+?$/,
	'death.attack.indirectMagic': /^.+? was killed by .+? using magic$/,
	'death.attack.indirectMagic.item': /^.+? was killed by .+? using .+?$/,
	'death.attack.inFire': /^.+? went up in flames$/,
	'death.attack.inFire.player': /^.+? walked into fire whilst fighting .+?$/,
	'death.attack.inWall': /^.+? suffocated in a wall$/,
	'death.attack.inWall.player': /^.+? suffocated in a wall whilst fighting .+?$/,
	'death.attack.lava': /^.+? tried to swim in lava$/,
	'death.attack.lava.player': /^.+? tried to swim in lava to escape .+?$/,
	'death.attack.lightningBolt': /^.+? was struck by lightning$/,
	'death.attack.lightningBolt.player': /^.+? was struck by lightning whilst fighting .+?$/,
	'death.attack.magic': /^.+? was killed by magic$/,
	'death.attack.magic.player': /^.+? was killed by magic whilst trying to escape .+?$/,
	'death.attack.message_too_long':
		/^Actually, the message was too long to deliver fully. Sorry! Here's stripped version: .+$/,
	'death.attack.mob': /^.+? was slain by .+?$/,
	'death.attack.mob.item': /^.+? was slain by .+? using .+?$/,
	'death.attack.onFire': /^.+? burned to death$/,
	'death.attack.onFire.item': /^.+? was burnt to a crisp whilst fighting .+? wielding .+?$/,
	'death.attack.onFire.player': /^.+? was burnt to a crisp whilst fighting .+?$/,
	'death.attack.outsideBorder': /^.+? left the confines of this world$/,
	'death.attack.outsideBorder.player':
		/^.+? left the confines of this world whilst fighting .+?$/,
	'death.attack.outOfWorld': /^.+? fell out of the world$/,
	'death.attack.outOfWorld.player': /^.+? didn't want to live in the same world as .+?"/,
	'death.attack.player': /^.+? was slain by .+?$/,
	'death.attack.player.item': /^.+? was slain by .+? using .+?$/,
	'death.attack.sonic_boom': /^.+? was obliterated by a sonically-charged shriek$/,
	'death.attack.sonic_boom.item':
		/^.+? was obliterated by a sonically-charged shriek whilst trying to escape .+? wielding .+?$/,
	'death.attack.sonic_boom.player':
		/^.+? was obliterated by a sonically-charged shriek whilst trying to escape .+?$/,
	'death.attack.stalagmite': /^.+? was impaled on a stalagmite$/,
	'death.attack.stalagmite.player': /^.+? was impaled on a stalagmite whilst fighting .+?$/,
	'death.attack.starve': /^.+? starved to death$/,
	'death.attack.starve.player': /^.+? starved to death whilst fighting .+?$/,
	'death.attack.sting': /^.+? was stung to death$/,
	'death.attack.sting.item': /^.+? was stung to death by .+? using .+?$/,
	'death.attack.sting.player': /^.+? was stung to death by .+?$/,
	'death.attack.sweetBerryBush': /^.+? was poked to death by a sweet berry bush$/,
	'death.attack.sweetBerryBush.player':
		/^.+? was poked to death by a sweet berry bush whilst trying to escape .+?$/,
	'death.attack.thorns': /^.+? was killed trying to hurt .+?$/,
	'death.attack.thorns.item': /^.+? was killed by .+? trying to hurt .+?$/,
	'death.attack.thrown': /^.+? was pummeled by .+?$/,
	'death.attack.thrown.item': /^.+? was pummeled by .+? using .+?$/,
	'death.attack.trident': /^.+? was impaled by .+?$/,
	'death.attack.trident.item': /^.+? was impaled by .+? with .+?$/,
	'death.attack.wither': /^.+? withered away$/,
	'death.attack.wither.player': /^.+? withered away whilst fighting .+?$/,
	'death.attack.witherSkull': /^.+? was shot by a skull from .+?$/,
	'death.attack.witherSkull.item': /^.+? was shot by a skull from .+? using .+?$/,
	'death.fell.accident.generic': /^.+? fell from a high place$/,
	'death.fell.accident.ladder': /^.+? fell off a ladder$/,
	'death.fell.accident.other_climbable': /^.+? fell while climbing$/,
	'death.fell.accident.scaffolding': /^.+? fell off scaffolding$/,
	'death.fell.accident.twisting_vines': /^.+? fell off some twisting vines$/,
	'death.fell.accident.vines': /^.+? fell off some vines$/,
	'death.fell.accident.weeping_vines': /^.+? fell off some weeping vines$/,
	'death.fell.assist': /^.+? was doomed to fall by .+?$/,
	'death.fell.assist.item': /^.+? was doomed to fall by .+? using .+?$/,
	'death.fell.finish': /^.+? fell too far and was finished by .+?$/,
	'death.fell.finish.item': /^.+? fell too far and was finished by .+? using .+?$/,
	'death.fell.killer': /^.+? was doomed to fall$/,
}
